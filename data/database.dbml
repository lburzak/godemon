Project godemon {
    database_type: 'MariaDB'
    Note: 'Any BIGINT UNSIGNED type is used to store Discord Snowflake identifiers'
}

Table god {
    id "int unsigned" [pk, increment, note: 'Consistent with Hi-Rez data']
    name varchar(20) [not null, unique, note: 'Computer-friendly name used to identify Discord emotes. Stripped from special characters and spaces. E.g. guanyu, change']
    name_en varchar(20) [not null, note: 'Display name, e.g. Guan Yu, Chang\'e']
    Note: 'SMITE gods known to the application'
}

Table emote_host {
    id "int unsigned" [pk, increment] // possible space optimization
    guild_id "bigint unsigned" [not null]
    Note: 'Discord guilds hosting emotes'
}

Table emote {
    id "int unsigned" [pk, increment]
    god_id "int unsigned" [ref: > god.id]
    display_id varchar(100) [not null, unique]
    hosted_id "bigint unsigned" [not null, unique]
    host_id "int unsigned" [not null, ref: > emote_host.id]
    Note: 'Discord emotes known to be hosted by emote hosts'
}

Table challenger {
    discord_id "bigint unsigned" [pk]
    hirez_name varchar(30) [unique]
    hirez_id "int unsigned" [unique]
    Note: 'Registered players'
}

Table challenge {
    id "int unsigned" [pk, increment]
    last_update timestamp [null]
    created_at timestamp [not null]
    gamemode_id "int unsigned" [not null, note: 'Corresponds to Hi-Rez Queue ID']
    Note: 'Ongoing challenges'
}

Table participant {
    challenge_id "int unsigned" [ref: > challenge.id]
    challenger_id "bigint unsigned" [ref: > challenger.discord_id]

    indexes {
        (challenge_id, challenger_id) [pk]
    }
    Note: 'Challenge participants'
}

Table proposed_champion {
    requester_id "bigint unsigned" [ref: > challenger.discord_id]
    challenge_id "int unsigned" [ref: > challenge.id]
    god_id "int unsigned" [ref: > god.id]

    indexes {
        (requester_id, challenge_id, god_id) [pk]
    }
    Note: 'Champions to choose from when accepting a propostion'
}

Table champion {
    challenge_id "int unsigned" [ref: > challenge.id]
    god_id "int unsigned" [ref: > god.id]
    uses_left "int unsigned" [not null, default: 1]

    indexes {
        (challenge_id, god_id) [pk]
    }
    Note: 'Gods available for challenge for given player'
}

Table contribution {
    match_id "int unsigned"
    participant_id "bigint unsigned" [ref: > participant.challenger_id]
    challenge_id "int unsigned" [not null, ref: > participant.challenge_id]
    god_id "int unsigned" [not null, ref: > god.id]
    win bit(1) [not null]
    kills "tinyint unsigned" [not null]
    deaths "tinyint unsigned" [not null]

    indexes {
        (match_id, participant_id) [pk]
    }
}
